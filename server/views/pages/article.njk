{% extends 'layout/default.njk' %}

{% block pageMeta %}
  {% set metaContent = {
    type: 'article',
    title: article.headline,
    image: article.promo.image.contentUrl,
    imageAlt: article.promo.image.alt,
    url: pageConfig.canonicalUri,
    description: article.description
  } %}
  {% component 'open-graph', { pageConfig: pageConfig, metaContent: metaContent } %}
  {% component 'twitter-card', { pageConfig: pageConfig, metaContent: metaContent } %}
  <meta name="description" content="{{ article.description | safe | striptags }}" />
{% endblock %}

{% block body %}
  {% block seriesNavigation %}
    {% for series in article.series %}
      {% if series.commissionedLength %}
        {# TODO: This is for Google Optimize. Find a better way to do it! #}
        <script>
          window.isDigitalStory = true;
        </script>
        <div data-component="DigitalStoryNavTop" class="inline"> {# `display: inline` allows sticky nav to stick #}
          {% set asyncContentEndpoint = '/series-nav/' + series.url + '?current=' + article.url %}
          {% component 'async', { endpoint: asyncContentEndpoint, component: 'series-nav' } %}
        </div>
      {% endif %}
    {% endfor %}
  {% endblock %}

  {% set commissionedSeries = article.series | getCommissionedSeries %}
  {% set seriesTitle = article.series | getSeriesTitle %}
  {% if commissionedSeries %}
    {% set seriesTitle = null %}
  {% endif %}

  <script type="application/ld+json">
    {{ article | jsonLd('contentLd') | safe }}
  </script>
  <article data-wio-id="{{ article.id }}">
    {% componentV2 'page-description', {
      intro: seriesTitle,
      title: article.headline,
      meta: {type: 'date', value: article.datePublished},
      lead: true
    }, {icon: article.contentType | getIconForContentType} %}

    {% set mainMediaData = {
      contentType: article.contentType,
      positionInSeries: article.positionInSeries,
      series: commissionedSeries,
      showCopyright: article.contentType !== 'comic'
    } %}

    {% if (article.mainMedia.length > 0) %}
      {% for mm in article.mainMedia %}
        {# TODO: Make this a type, rather than on the article #}
        {% if (article.contentType === 'comic') %}
          {%
            componentJsx 'MainMedia',
            (article.mainMedia | getPrincipleMainMedia) | objectAssign({extraClasses: 'captioned-image--fit-vh', showWobblyEdge: false, license: 'CC-BY-NC' })
          %}
        {% elif mm.type === 'video-embed' %}
          {% componentV2 'main-media-video', article.mainMedia | getPrincipleMainMedia, {full: true}, mainMediaData %}
        {% elif mm.image.contentUrl %}
          {% componentJsx 'MainMedia', mm | objectAssign({
            chapterIndicatorProps: {
              position: article.positionInSeries,
              color: commissionedSeries.color,
              commissionedLength: commissionedSeries.commissionedLength
            } if commissionedSeries else null,
            showWobblyEdge: true
          }) %}
        {% endif %}
      {% endfor %}
    {% endif %}

    <div class="row bg-cream">
      <div class="container">
        <div class="grid {{ {s:6} | spacingClasses({padding: ['top']}) }}">
          <div class="{{ {s: 12, m: 10, shiftM: 1, l: 12, xl: 12} | gridClasses }}">
            {% componentV2 'divider', null, {'pumice': true, 'keyline': true} %}
          </div>
        </div>
      </div>
    </div>


    {% if featuresCohort | isFlagEnabled('basicBody', featureFlags) %}
      <div class="row bg-cream {{ {s:3} | spacingClasses({padding: ['top']}) }} {{ {s:8} | spacingClasses({padding: ['bottom']}) }} ">
        <div class="container">
          <div class="grid">
            <div class="basic-page {{ {s: 12, m: 10, shiftM: 1, l: 8, shiftL: 2, xl: 8, shiftXL: 2} | gridClasses }}">
              {% if article.bodyParts.length > 0  %}
                {% for author in article.author.toJS() %}
                  {% if author.person %}
                    {% component 'author', {
                      name: author.person.name,
                      twitterHandle: author.person.twitterHandle,
                      modifiers: ['border-bottom'] if loop.last else [],
                      image: author.person.image
                    } %}
                  {% endif %}
                {% endfor %}
              {% endif %}
            </div>

            <div class="basic-page {{ {s: 12, m: 10, shiftM: 1, l: 8, shiftL: 2, xl: 8, shiftXL: 2} | gridClasses }}">
              {% componentJsx 'BasicBody', {body: article.bodyParts} %}
            </div>

            <div class="basic-page {{ {s: 12, m: 10, shiftM: 1, l: 8, shiftL: 2, xl: 8, shiftXL: 2} | gridClasses }}">
              {% if article.bodyParts.length > 0  %}
                {% for author in article.author.toJS() %}
                  {% if author.person %}
                    {% component 'author', {
                      name: author.person.name,
                      twitterHandle: author.person.twitterHandle,
                      modifiers: ['border-left'],
                      description: author.person.description,
                      image: author.person.image
                    } %}
                  {% endif %}
                {% endfor %}
              {% endif %}
            </div>

          </div>
        </div>
      </div>
    {% else %}
      <div class="row bg-cream {{ {s:3} | spacingClasses({padding: ['top']}) }} {{ {s:8} | spacingClasses({padding: ['bottom']}) }} ">
        <div class="container">
          <div class="grid grid--no-gutters">
            <div class="{{ {s: 12, m: 10, shiftM: 1, l: 7, xl: 7} | gridClasses }}">
              {% if article.bodyParts.length > 0  %}
                {% for author in article.author.toJS() %}
                  {% if author.person %}
                    {% component 'author', {
                      name: author.person.name,
                      twitterHandle: author.person.twitterHandle,
                      modifiers: ['border-bottom'] if loop.last else [],
                      image: author.person.image
                    } %}
                  {% endif %}
                {% endfor %}
              {% endif %}

              <div class="article">
                {% block articleBody %}
                  {% component 'article-body', {articleBody: article.bodyParts, contentType: article.contentType} %}
                {% endblock %}

                {% for author in article.author.toJS() %}
                  {% if author.person %}
                    {% component 'author', {
                      name: author.person.name,
                      twitterHandle: author.person.twitterHandle,
                      modifiers: ['border-left'],
                      description: author.person.description,
                      image: author.person.image
                    } %}
                  {% endif %}
                {% endfor %}

                {% componentV2 'divider', null, {'stub': true, 'black': true}, {extraClasses: [{s:4} | spacingClasses({margin: ['top']})]} %}

                {% if tags.length > 0 %}
                  <div class="{{ {s: 2} | spacingClasses({ margin: ['top'] }) }}">
                    {% componentJsx 'Tags', { tags: tags } %}
                  </div>
                {% endif %}
              </div>

            </div>
          </div>
        </div>
      </div>
    {% endif %}
  </article>

  {% block transporters %}
    {% for series in article.series %}
      {% if series.commissionedLength %}
        <div class="row">
          <div class="container digital-story-transporter">
            <div class="grid grid--no-gutters">
              <div class="{{ {s: 12, m: 10, shiftM: 1, l: 7, xl: 7} | gridClasses }}">
                <div class="body-part body-part--full-width">
                  <div class="{{ {s:8} | spacingClasses({padding: ['bottom']}) }}">
                    {% componentJsx 'WobblyEdge', {
                      background: 'white',
                      isStatic: true,
                      extraClasses: 'wobbly-edge--small'
                    } %}
                    <div data-component="DigitalStoryNavBottom">
                      {% set asyncContentEndpoint = '/series-transporter/' + series.url + '?current=' + article.url %}
                      {% component 'async', { endpoint: asyncContentEndpoint, component: 'series-transporter', modifiers: '{"in-article": true}' } %}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      {% endif %}
    {% endfor %}
  {% endblock %}

{% endblock %}
