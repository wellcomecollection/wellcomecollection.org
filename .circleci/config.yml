version: 2
jobs:
  checkout_code:
    docker:
      - image: circleci/node:8.11.3
    working_directory: ~/wellcomecollection.org
    steps:
      - checkout
      - save_cache:
          key: repo_{{ .Environment.CIRCLE_SHA1 }}
          paths:
            -  ~/wellcomecollection.org
  catalogue:
    docker:
      - image: circleci/node:8.11.3
    working_directory: ~/wellcomecollection.org/catalogue/webapp
    steps:
      - restore_cache:
          key: repo_{{ .Environment.CIRCLE_SHA1 }}
      - add_ssh_keys
      - setup_remote_docker
      - run:
          name: Docker build
          command: CONTAINER_TAG=${CIRCLE_SHA1} docker-compose build
      - run:
          name: Docker push
          command: |
            if [ "$CIRCLE_BRANCH" = "master" ];
            then
                docker login --username $DOCKER_USER --password $DOCKER_PASS
                CONTAINER_TAG=${CIRCLE_SHA1} docker-compose push
            fi
      - run:
          name: Next report
          command: |
            yarn
            BUILD_HASH=${CIRCLE_SHA1} BUNDLE_ANALYZE=both yarn build
            # Taken from
            # http://docs.aws.amazon.com/cli/latest/userguide/awscli-install-linux.html
            sudo apt-get -y -qq update
            sudo apt-get -y -qq install python3.4-dev
            curl -O https://bootstrap.pypa.io/get-pip.py
            python3.4 get-pip.py --user
            export PATH=~/.local/bin:$PATH
            pip install awscli --upgrade --user
            pushd .dist
              cp browser.${CIRCLE_SHA1}.html catalogue.browser.latest.html
              cp browser.${CIRCLE_SHA1}.json catalogue.browser.latest.json
              cp server.${CIRCLE_SHA1}.html catalogue.server.latest.html
              cp server.${CIRCLE_SHA1}.json catalogue.server.latest.json
              aws s3 sync --only-show-errors . s3://dash.wellcomecollection.org/bundles
            popd
  content:
    docker:
      - image: circleci/node:8.11.3
    working_directory: ~/wellcomecollection.org/content/webapp
    steps:
      - restore_cache:
          key: repo_{{ .Environment.CIRCLE_SHA1 }}
      - add_ssh_keys
      - setup_remote_docker
      - run:
          name: Docker build
          command: CONTAINER_TAG=${CIRCLE_SHA1} docker-compose build
      - run:
          name: Docker push
          command: |
            if [ "$CIRCLE_BRANCH" = "master" ];
            then
                docker login --username $DOCKER_USER --password $DOCKER_PASS
                CONTAINER_TAG=${CIRCLE_SHA1} docker-compose push
            fi
      - run:
          name: Install awscli
          command: sudo apt-get install awscli
      - run:
          name: Deploy
          command: |
            pushd ../../deploy
              yarn
              node ./deploy_service.js -s content --no-verify
            popd
      - run:
          name: Next report
          command: |
            yarn
            BUILD_HASH=${CIRCLE_SHA1} BUNDLE_ANALYZE=both yarn build
            # Taken from
            # http://docs.aws.amazon.com/cli/latest/userguide/awscli-install-linux.html
            sudo apt-get -y -qq update
            sudo apt-get -y -qq install python3.4-dev
            curl -O https://bootstrap.pypa.io/get-pip.py
            python3.4 get-pip.py --user
            export PATH=~/.local/bin:$PATH
            pip install awscli --upgrade --user
            pushd .dist
              cp browser.${CIRCLE_SHA1}.html content.browser.latest.html
              cp browser.${CIRCLE_SHA1}.json content.browser.latest.json
              cp server.${CIRCLE_SHA1}.html content.server.latest.html
              cp server.${CIRCLE_SHA1}.json content.server.latest.json
              aws s3 sync --only-show-errors . s3://dash.wellcomecollection.org/bundles
            popd
  root_tests:
    docker:
      - image: circleci/node:8.11.3
    working_directory: ~/wellcomecollection.org
    steps:
      - restore_cache:
          key: repo_{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: root_modules_circleci_node_8_{{ checksum "package.json" }}
      - run:
          name: Install root modules
          command: yarn install
      - run:
          name: Flow
          command: yarn flow
      - save_cache:
          key: root_modules_circleci_node_8_{{ checksum "package.json" }}
          paths:
            -  node_modules
  deploy_pa11y:
    docker:
      - image: circleci/node:8.11.3
    environment:
      NODE_ENV: test
    working_directory: ~/wellcomecollection.org/pa11y/webapp
    steps:
    - add_ssh_keys
    - restore_cache:
        key: repo_{{ .Environment.CIRCLE_SHA1 }}
    - run:
        name: Install awscli
        command: sudo apt-get install awscli
    - run:
        name: Yarn install
        command: yarn
    - run:
        name: Install Chrome dependencies
        command: |
          sudo apt-get update && \
          sudo apt-get install -yq --no-install-recommends \
          libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
          libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
          libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 \
          libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \
          libnss3
    - run:
        name: Write pa11y report
        command: yarn write-report
    - run:
        name: Build next app
        command: |
            yarn build
            yarn export
    - run:
        name: Deploy
        command: |
          aws s3 sync ./out s3://dash.wellcomecollection.org/pa11y --only-show-errors
  deploy_toggles:
    docker:
      - image: circleci/node:8.11.3
    environment:
      NODE_ENV: test
    working_directory: ~/wellcomecollection.org/toggles/webapp
    steps:
    - add_ssh_keys
    - restore_cache:
        key: repo_{{ .Environment.CIRCLE_SHA1 }}
    - run:
        name: Install awscli
        command: sudo apt-get install awscli
    - run:
        name: Yarn install
        command: yarn
    - run:
        name: Build next app
        command: |
            yarn build
            yarn export
    - run:
        name: Deploy
        command: |
          aws s3 sync ./out s3://dash.wellcomecollection.org/toggles --only-show-errors
  install_common_modules:
    docker:
      - image: circleci/node:8.11.3
    working_directory: ~/wellcomecollection.org/common
    steps:
      - restore_cache:
          key: repo_{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Install common modules
          command: yarn install
      - save_cache:
          key: common_modules_circleci_node_8_{{ checksum "package.json" }}
          paths:
            -  node_modules
  cardigan:
    docker:
      - image: circleci/node:8.11.3
    working_directory: /home/circleci/wellcomecollection.org/cardigan
    steps:
      - add_ssh_keys
      - restore_cache:
          key: repo_{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - common_modules_circleci_node_8_{{ checksum "package.json" }}
            - common_modules_circleci_node_8_
      - run:
          name: Install awscli
          command: sudo apt-get install awscli
      - run:
          name: Build
          command: |
            yarn
            yarn build
      - run:
          name: Deploy
          command: |
            if [ "$CIRCLE_BRANCH" = "master" ];
            then
                pushd .dist
                    aws s3 sync --only-show-errors . s3://cardigan.wellcomecollection.org
                popd
            fi
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - checkout_code
      - catalogue:
          requires:
            - checkout_code
      - content:
          requires:
            - checkout_code
      - install_common_modules:
          requires:
            - checkout_code
      - deploy_pa11y:
          requires:
            - checkout_code
          filters:
            branches:
              only:
                - master
      - deploy_toggles:
          requires:
            - checkout_code
          filters:
            branches:
              only:
                - master
      - root_tests:
          requires:
            - checkout_code
      - cardigan:
          requires:
            - checkout_code
