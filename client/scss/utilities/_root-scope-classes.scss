@each $spacing-size in $grid-config {
  $spacing-size-key: nth($spacing-size, 1);
  $spacing-size-map: nth($spacing-size, 2);
  $spacing-size-respond: map-get($spacing-size-map, 'respond');

  @if (length($spacing-size-respond) > 1) {
    @include respond-to(nth($spacing-size-respond, 1)) {
      @include spacing-classes($spacing-size-key);
    }
  } @else {
    @include respond-to($spacing-size-respond) {
      @include spacing-classes($spacing-size-key);
    }
  }
}

@each $breakpoint-key, $breakpoint-value in $grid-config {
  @each $font-key, $font-value in $fonts {
    $breakpoint-respond: map-get($breakpoint-value, 'respond');

    .font-#{$font-key}-#{$breakpoint-key} {
      @if (length($breakpoint-respond) > 1) {
        @include respond-to(nth($breakpoint-respond, 1)) {
          @include font($font-key);
        }
      } @else {
        @include respond-to($breakpoint-respond) {
          @include font($font-key);
        }
      }
    }
  }
}

@each $color-key, $color-value in $colors {
  .font-#{$color-key} {
    // stylelint-disable sh-waqar/declaration-use-variable
    color: nth($color-value, 1);
    // stylelint-enable sh-waqar/declaration-use-variable
  }
}

@each $color-key, $color-value in $colors {
  .font-hover-#{$color-key}:hover {
    // stylelint-disable sh-waqar/declaration-use-variable
    color: nth($color-value, 1);
    // stylelint-enable sh-waqar/declaration-use-variable
  }
}

.caps {
  text-transform: uppercase;
}

@each $color-key, $color-value in $colors {
  .bg-#{$color-key} {
    // stylelint-disable sh-waqar/declaration-use-variable
    background: nth($color-value, 1);
    // stylelint-enable sh-waqar/declaration-use-variable
  }
}

.is-hidden {
  // This should trump other display styles
  // stylelint-disable declaration-no-important
  display: none !important;
  // stylelint-enable declaration-no-important
}

.line-height-1 {
  line-height: 1;
}

// Adds momentum scrolling to iOS
// TODO: consider removing if/when scroll snapping is implemented
.touch-scroll {
  -webkit-overflow-scrolling: touch;
}

.v-align-middle {
  vertical-align: middle;
}

.v-center {
  top: 50%;
  transform: translateY(-50%);
}

.flex {
  display: flex;
}

.flex--column {
  flex-direction: column;
}

.flex-inline {
  display: inline-flex;
}

.flex--v-center {
  align-items: center;
}

.flex--wrap {
  flex-wrap: wrap;
}

.flex--h-center {
  justify-content: center;
}

.flex--h-space-between {
  justify-content: space-between;
}

.pointer {
  cursor: pointer;
}

.pointer-events-none {
  pointer-events: none;
}

.pointer-events-all {
  pointer-events: all;
}

.plain-button {
  appearance: none;
  font-family: inherit;
  letter-spacing: inherit;
  background: color('transparent');
  border: 0;
  text-align: left;
}

.plain-link {
  text-decoration: none;
}

.no-visible-focus {
  &,
  &:focus {
    outline: 0;
  }
}

.link-underline {
  text-decoration: none;
  box-shadow: inset 0 -1px 0 0 color('teal');

  &[href]:hover,
  &[href]:focus,
  [href] &:hover,
  [href] &:focus {
    box-shadow: inset 0 -2px 0 0 color('teal');
  }
}

.plain-list {
  list-style: none;
}

.inline {
  display: inline;
}

.float-r {
  float: right;
}

.float-l {
  float: left;
}

.h-center {
  margin-left: auto;
  margin-right: auto;
}

.heading--large {
  @include font('WB6');

  @include respond-to('medium') {
    @include font('WB5');
  }

  @include respond-to('large') {
    @include font('WB4');
  }
}

.text--meta {
  @include font('LR3');

  color: color('pewter');

  @include respond-to('medium') {
    @include font('LR2');
  }
}

.text--truncate {
  max-height: 80px;
  overflow: hidden;

  &:after {
    position: absolute;
    top: 45px;
    content: '';
    display: block;
    width: 100%;
    height: 35px;
    background: linear-gradient(rgba(255, 255, 255 , 0.001), color('white')); // Safari doesn't like transparent (shows as grey), so giving a value very close to transparent.
  }
}

.border-left {
  border-left: 5px solid color('black');
}

.border-left--smoke {
  border-left: 5px solid color('smoke');
}

.border-top {
  border-top: 1px solid color('silver');
}

.border-bottom {
  border-bottom: 1px solid color('silver');
}

.bg-white {
  background: color('white');
}

.relative {
  position: relative;
}

.flush-container-left {
  position: absolute;
  left: $container-padding-s;

  @include respond-to('medium') {
    left: $container-padding-m;
  }

  @include respond-to('large') {
    left: $container-padding-l;
  }

  @include respond-to('xlarge') {
    left: calc(((100vw - #{$container-width-max}) / 2) + #{$container-padding-xl});
  }
}

.flush-container-right {
  position: absolute;
  right: $container-padding-s;

  @include respond-to('medium') {
    right: $container-padding-m;
  }

  @include respond-to('large') {
    right: $container-padding-l;
  }

  @include respond-to('xlarge') {
    right: calc(((100vw - #{$container-width-max}) / 2) + #{$container-padding-xl});
  }
}

.no-margin {
  margin: 0;
}

.no-padding {
  padding: 0;
}

.rounded-corners {
  border-radius: $border-radius-unit;
}

.round {
  border-radius: 50%;
}

.relative-s {
  @include respond-to('small') {
    position: relative;
  }
}

.absolute-m {
  @include respond-to('medium') {
    position: absolute;
  }
}
