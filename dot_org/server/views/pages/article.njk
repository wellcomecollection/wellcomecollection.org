{% extends 'layout/default.njk' %}

{% block pageMeta %}
  {% set metaContent = {
    type: 'article',
    title: article.headline,
    image: article.thumbnail.contentUrl,
    url: pageConfig.canonicalUri,
    description: article.description
  } %}
  {% component 'open-graph', { pageConfig: pageConfig, metaContent: metaContent } %}
  {% component 'twitter-card', { pageConfig: pageConfig, metaContent: metaContent } %}
  <meta name="description" content="{{ article.description | safe | striptags }}" />
{% endblock %}

{% block body %}
  {% block seriesNavigation %}
    {% for series in article.series %}
      {% if series.commissionedLength %}
        {# TODO: This is for Google Optimize. Find a better way to do it! #}
        <script>
          window.isDigitalStory = true;
        </script>
        {% set asyncContentEndpoint = '/series-nav/' + series.url + '?current=' + article.url %}
        {% component 'async', { endpoint: asyncContentEndpoint, component: 'series-nav' } %}
      {% endif %}
    {% endfor %}
  {% endblock %}

  {% set commissionedSeries = article.series | getCommissionedSeries %}
  {% set seriesTitle = article.series | getSeriesTitle %}
  {% if commissionedSeries %}
    {% set seriesTitle = null %}
  {% endif %}

  <script type="application/ld+json">
    {{ article | jsonLd('contentLd') | safe }}
  </script>
  <article>
    {% componentV2 'page-description', {
      intro: seriesTitle,
      title: article.headline,
      meta: {type: 'date', value: article.datePublished},
      lead: true
    }, {icon: article.contentType | getIconForContentType} %}

    {% set mainMediaData = {
      contentType: article.contentType,
      positionInSeries: article.positionInSeries,
      series: commissionedSeries,
      showCopyright: article.contentType !== 'comic'
    } %}

    {% if (article.mainMedia.length > 0) %}
      {% for mm in article.mainMedia %}
        {# TODO: Make this a type, rather than on the article #}
        {% if (article.contentType === 'comic') %}
          {% componentV2 'main-media-comic', article.mainMedia | getPrincipleMainMedia, {full: true, 'fit-vh': true}, mainMediaData %}
        {% elif mm.type === 'video-embed' %}
          {% componentV2 'main-media-video', article.mainMedia | getPrincipleMainMedia, {full: true}, mainMediaData %}
        {% elif mm.type === 'image-lists' %}
          <div class="{{ {s: 12, m: 10, l: 11, xl: 10, shiftM: 1, shiftL: 1, shiftXl: 1} | gridClasses }}">
            <ul class="plain-list no-margin no-padding">
              <p>{{ mm.description }}</p>
              {% for item in mm.items %}
                <li>
                  <h2>
                    <div class="flex">
                      <div class="{{ {s: 1} | spacingClasses({margin: ['right']}) }}">{{ loop.index }}.</div>
                      <div>
                        <div>
                          {{ item.title }}
                        </div>
                        {% if item.subtitle %}
                          <div>
                            {{ item.subtitle }}
                          </div>
                        {% endif %}
                      </div>
                    </div>
                  </h2>
                  {% componentV2 'captioned-image', item.image, {'has-border-bottom': item.image.caption}, {showCopyright: true} %}
                  {{item.description | safe}}
                </li>
              {% endfor %}
            </ul>
          </div>
        {% elif mm.type === 'picture' %}
          {% componentV2 'main-media', article.mainMedia | getPrincipleMainMedia, {full: true}, mainMediaData %}
        {% endif %}
      {% endfor %}
    {% endif %}

    <div class="row bg-cream">
      <div class="container">
        <div class="{{ {s:6} | spacingClasses({padding: ['top']}) }}">
          {% componentV2 'divider', null, {'pumice': true, 'keyline': true} %}
        </div>
      </div>
    </div>

    <div class="row bg-cream {{ {s:8} | spacingClasses({padding: ['top', 'bottom']}) }} ">
      <div class="container">
        <div class="grid grid--no-gutters">
          <div class="{{ {s: 12, m: 10, shiftM: 1, l: 7, xl: 6, shiftXl: 1} | gridClasses }}">
            {% if article.bodyParts.length > 0  %}
              {% for author in article.author %}
                {% if author.person %}
                  {% component 'author', {
                    name: author.person.name,
                    twitterHandle: author.person.twitterHandle,
                    modifiers: ['border-bottom'] if loop.last else [],
                    image: author.person.image
                  } %}
                {% endif %}
              {% endfor %}
            {% endif %}

            <div class="article">
              {% block articleBody %}
                {% component 'article-body', {articleBody: article.bodyParts, contentType: article.contentType} %}
              {% endblock %}

              {% for author in article.author %}
                {% if author.person %}
                  {% component 'author', {
                    name: author.person.name,
                    twitterHandle: author.person.twitterHandle,
                    modifiers: ['border-left'],
                    description: author.person.description,
                    image: author.person.image
                  } %}
                {% endif %}
              {% endfor %}

              {% componentV2 'divider', null, {'stub': true, 'black': true}, {extraClasses: [{s:4} | spacingClasses({margin: ['top']})]} %}

              {% if article.tags.length > 0 %}
                {% component 'tags', { tags: article.tags } %}
              {% endif %}
            </div>

          </div>
        </div>
      </div>
    </div>
  </article>

  {% block transporters %}
    {% for series in article.series %}
      {% if series.commissionedLength %}
        <div class="row {{ {s:10} | spacingClasses({padding: ['top']}) }}">
          <div class="container digital-story-transporter">
            <div class="grid grid--no-gutters">
              <div class="{{ {s: 12, m: 10, shiftM: 1, l: 7, xl: 6, shiftXl: 1} | gridClasses }}">
                <div class="body-part body-part--full-width">
                  <div class="{{ {s:8} | spacingClasses({padding: ['bottom']}) }}">
                    <div class="wobbly-edge wobbly-edge--white wobbly-edge--small js-wobbly-edge" data-is-static="true"></div>
                    {% set asyncContentEndpoint = '/series-transporter/' + series.url + '?current=' + article.url %}
                    {% component 'async', { endpoint: asyncContentEndpoint, component: 'series-transporter', modifiers: '{"in-article": true}' } %}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      {% endif %}
    {% endfor %}
  {% endblock %}

{% endblock %}
