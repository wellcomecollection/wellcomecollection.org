{% extends 'layout/default.njk' %}

{% set metaContent = {
  type: 'website',
  title: "What's On",
  image: exhibitionAndEventPromos.temporaryExhibitionPromos[0].image.contentUrl,
  url: pageConfig.canonicalUri,
  description: ''
} %}

{% block pageMeta %}
  {% component 'open-graph', { pageConfig: pageConfig, metaContent: metaContent } %}
  {% component 'twitter-card', { pageConfig: pageConfig, metaContent: metaContent } %}
  <meta name="description" content="{{ metaContent.description }}" />
{% endblock %}

{% block body %}
   <script type="application/ld+json">
    [{% for exhibition in exhibitionAndEventPromos.temporaryExhibitionPromos %}
      {% set featuredImage = {contentUrl: exhibition.image.contentUrl} %}
      {% set exhib = exhibition | objectAssign({safeDescription: exhibition.description | safe | striptags, featuredImage: featuredImage}) %}
      {{ exhib | jsonLd('exhibitionLd') | safe }},
    {% endfor %}
    {% for event in exhibitionAndEventPromos.eventPromos %}
      {{ event | jsonLd('eventPromoLd') | safe }},
    {% endfor %}
    {% for exhibition in exhibitionAndEventPromos.permanentExhibitionPromos %}
      {% set featuredImage = {contentUrl: exhibition.image.contentUrl} %}
      {% set exhib = exhibition | objectAssign({safeDescription: exhibition.description | safe | striptags, featuredImage: featuredImage}) %}
      {{ exhib | jsonLd('exhibitionLd') | safe }}{{ ',' if not loop.last }}
    {% endfor %}]
  </script>

  {% set todayDateString = exhibitionAndEventPromos.dates.today + '|' + exhibitionAndEventPromos.dates.today %}
  {% set weekendDateString = exhibitionAndEventPromos.dates.weekend[0] + '|' + exhibitionAndEventPromos.dates.weekend[1] %}
  {% set allDateString = exhibitionAndEventPromos.dates.all[0] + '|' + exhibitionAndEventPromos.dates.all[1] %}
  {% set whatsOnModel = {
    todayOpeningHours: todayOpeningHours,
    name: 'What\'s on',
    items: [
      {id: 'today', title: 'Today', url: '/whats-on/?' + 'f[dates]' | urlencode + '=' + todayDateString | urlencode },
      {id: 'weekend', title: 'This weekend', url: '/whats-on/?' + 'f[dates]' | urlencode + '=' + weekendDateString | urlencode },
      {id: 'everything', title: 'Everything', url: '/whats-on/?' + 'f[dates]' | urlencode + '=' + allDateString | urlencode}
    ]
   } %}

  {% set whatsOnData = {activeId: exhibitionAndEventPromos.active, id: 'whatsOnFilter' } %}
  {% componentV2 'whats-on-list-header', whatsOnModel, {}, whatsOnData %}

  <div class="css-grid__container">
    <div class="css-grid {{ {s:2, m:4} | spacingClasses({margin: ['top', 'bottom']}) }}">

      {% if exhibitionAndEventPromos.active === 'everything' %}
        {% include 'partials/separate_exhibition_event_promos.njk' %}
      {% else %}
        {% include 'partials/mixed_exhibition_event_promos.njk' %}
      {% endif %}

      {% macro permanentPromos(heading, promos, size) %}
        <div class="{{ {s: 12, m: 12, l: 12, xl:12} | cssGridClasses }}">
          {% componentV2 'divider', null, {'dashed': true} %}
        </div>

        <div class="{{ {s: 12, m: 12, l: 12, xl:12} | cssGridClasses }}">
          <h2 class="{{ {s:'WB4'}  | fontClasses }} {{ {s:0} | spacingClasses({margin: ['top', 'bottom']}) }}">{{heading}}</h2>
        </div>

        <div class="{{ {s: 12, m: 12, l: 12, xl:12} | cssGridClasses }} css-grid__scroll-container">
          <div class="css-grid grid--scroll">
            {% if size === 'large' %}
              {% set gridClasses = {s: 12, m: 6, l: 6, xl:6} | cssGridClasses %}
            {% else %}
              {% set gridClasses = {s: 12, m: 6, l: 3, xl:3} | cssGridClasses %}
            {% endif %}

            {% for promo in promos %}
              <div class="{{gridClasses}}">
                {% componentV2 'facility-promo', promo, {}, {sizes: '(min-width: 1420px) 475px, (min-width: 960px) 34.32vw, (min-width: 600px) calc(50vw - 54px), calc(100vw - 36px)'} %}
              </div>
            {% endfor %}
          </div>
        </div>
      {% endmacro %}

      {{ permanentPromos('While you visit', whileVisitPromos, 'large') }}

      {{ permanentPromos('Eat and shop', eatShopPromos, 'small') }}
      </div>
    </div>
  </div>
{% endblock %}
