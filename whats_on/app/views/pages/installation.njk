{% extends 'layout/default.njk' %}

{% block pageMeta %}
  {% set metaContent = {
    type: 'article',
    title: installation.title,
    url: pageConfig.canonicalUri,
    description: installation.description | prismicAsText
  } %}
  {% component 'open-graph', { pageConfig: pageConfig, metaContent: metaContent } %}
  {% component 'twitter-card', { pageConfig: pageConfig, metaContent: metaContent } %}
  <meta name="description" content="{{ installation.description | prismicAsText }}" />
{% endblock %}

{% block body %}

  <script type="application/ld+json">
    {#{{ page | jsonLd('contentLd') | safe }}#}
  </script>

  <article>
    <div class="row relative">
      <div class="flush-container-left absolute {{ {s:2} | spacingClasses({margin: ['top', 'bottom']}) }}">
        {% componentV2 'tags', tags %}
      </div>

      <div class="exhibition-hero">
        {% componentV2 'picture', {images: exhibition.featuredImages.toJS()}, {}, {'lazyload': true, extraClasses: ['exhibition-hero__picture'], showCopyright: true} %}

        <div class="exhibition-hero__copy {{ {l:10} | spacingClasses({margin: ['bottom']}) }}">
          <div class="is-hidden-l is-hidden-xl">
            {% component 'wobbly-edge', {background: 'white'} %}
          </div>

          <div class="container">
            <div class="grid">
              <div class="{{ {s:12, m:10, shiftM:1, l:12, xl:12} | gridClasses }}">
                <div class="bg-white inline-block exhibition-hero__box {{ {l:4} | spacingClasses({'padding': ['right', 'left']}) }} {{ {s:4} | spacingClasses({'padding': ['top', 'bottom']}) }} rounded-diagonal">
                  <div class="flex flex--v-center flex--h-space-between">
                    <span class="{{ {s:'HNM4', m:'HNM3'} | fontClasses }} {{ {s: 6} | spacingClasses({margin: ['right']}) }}">Free admission</span>
                    <span class="flex flex--v-center {{ {s:'HNM4'} | fontClasses }}">
                    {% set dateMessageAndColor = {start: exhibition.start, end: exhibition.end} | formatDateRangeWithMessage %}
                      <span class="{{ {s:1} | spacingClasses({margin: ['right']}) }} flex flex--v-center">
                      {% set statusColor = 'icon--' + dateMessageAndColor.color %}
                        {% icon 'status_indicator', null, [statusColor, 'icon--match-text'] %}
                    </span>
                    <span>{{ dateMessageAndColor.text }}</span>
                  </span>
                  </div>
                  <h1 class="{{ {s:'WB5', m:'WB4', xl:'WB3'} | fontClasses }}">{{ exhibition.title }}</h1>
                  <span class="{{ {s:'HNL4', m:'HNL3', l:'HNL3', xl:'HNL2'} | fontClasses }}">
                  {% if exhibition.end %}
                    <time datetime="{{ exhibition.start }}">{{ exhibition.start | formatDate }}</time>&ndash;<time datetime="{{ exhibition.end }}">{{ exhibition.end | formatDate }}</time>
                  {% endif %}
                </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>


      <div class="is-hidden-s is-hidden-m">
        {% component 'wobbly-edge', {background: 'white', intensity: 30} %}
      </div>
    </div>

    <header class="page-description {{ 'page-description' | componentClasses(modifiers) }}">
      <div class="row page-description__row {{ 'row--lead row--lead--l' if model.lead }}">
        <div class="container page-description__container">
          <div class="grid">
            <div class="{{ {s: 12, m: 10, shiftM: 1, l: 8, shiftL: 2, xl: 8, shiftXL: 2} | gridClasses }}">
              <h1 class="page-description__title {{ {s:'WB5', m:'WB4', l:'WB3'} | fontClasses }}">
                {{ installation.title }}
              </h1>
              <div>
                {{ installation.description | prismicAsHtml | safe }}
              </div>
            </div>
          </div>
        </div>
      </div>
    </header>

    <div class="row bg-cream {{ {s:3} | spacingClasses({padding: ['top']}) }} {{ {s:8} | spacingClasses({padding: ['bottom']}) }} ">
      <div class="container">
        <div class="grid">
          <div class="basic-page {{ {s: 12, m: 10, shiftM: 1, l: 8, shiftL: 2, xl: 8, shiftXL: 2} | gridClasses }}">
            {% block articleBody %}
              {% component 'basic-body', { pageBody: installation.body } %}
            {% endblock %}
          </div>
        </div>
      </div>
    </div>
  </article>

{% endblock %}
