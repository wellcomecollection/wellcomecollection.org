@function color($name) {
  $name: quote($name);

  @return map-get($colors, $name);
}

// Converts pixel values to rems
@function px-to-rem($pixels, $base: $base-font-size) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }

  @if (unitless($base)) {
    $base: $base * 1px;
  }

  @return $pixels / $base * 1rem;
}

// Converts Photoshop tracking value to CSS em equivalent.
// https://scotch.io/tutorials/converting-photoshop-letter-spacing-to-css
@function tracking-to-em($tracking-value) {
  @return ($tracking-value / 1000) * 1em;
}

// Converts px value to unitless line-height.
@function px-to-unitless($line-height, $font-size) {
  @return $line-height / $font-size;
}

// Get the width of a number of columns at a given viewport width
@function span-columns($viewport-size, $number, $no-final-gutter: false) {
  $columns-at-size: map-get($total-columns, $viewport-size);
  $gutter-at-size: map-get($gutter-width, $viewport-size);
  $multiplier: if($no-final-gutter, $number - 1, $number);
  $total-gutter: $multiplier * $gutter-at-size;
  $percent-width: (100% / $columns-at-size) * $number;

  @return calc(#{$percent-width} + #{$total-gutter});
}
